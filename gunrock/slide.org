#+options: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline author:t
#+options: broken-links:nil c:nil creator:nil d:(not "LOGBOOK") date:t e:t
#+options: email:nil f:t inline:t num:t p:nil pri:nil prop:nil stat:t tags:t
#+options: tasks:t tex:t timestamp:t title:t toc:t todo:t |:t
#+title: Amazon Alexa の内部システムの最先端を読む（2018）
#+date: <2019-03-17 Sun>
#+author: MokkeMeguru
#+email: meguru.mokke@gmail.com
#+language: ja
#+select_tags: export
#+exclude_tags: noexport
#+creator: Emacs 25.2.2 (Org mode 9.2.2)

* 導入
  この記事は Amazon Alexa Prize 2018 年度最優秀賞を獲得した Gunrock の論文を元に作成しています。    

  他の論文では少し内容が異なっていることがありますが、最優秀賞を取ることができたということは恐らく最も出題を理解していたのだろうということでこちらを参考にしました。    

  また本記事の方針は、対話システムってどんな研究しているの？ということを紹介することです。なのでこの記事を読んでも *Alexa は作れません* (とはいえ本家の論文を読んでも再現性ないですが)。    
* Amazon Alexa Prize 2018 とその最優秀賞である Gunrock とは
  昨年の冬、Amazon Alexa の内部システムを競うコンテスト、Amazon Alexa Prize 2018 の審査結果が発表されました。最優秀賞を獲得したのは Gunrock というシステムで University of California Davis によるものでした。    

  今回（昨年度もほとんど同じような内容だったような・・・）のテーマは Social bot と呼ばれる主に雑談対話をメインに据えた対話システムの作成でした。とはいえ我々の想像以上にこのコンテストはやらなければ多く、例えば音声認識や音声生成、Alexa特有の処理へのハンドリングを挙げることができます。    
  さて件の Gunrock は本テーマにおいて最も良い評価を得ることができたシステムとなります。評価基準は審査員からの5点満点の評価で、3.62 点を取りました。これが良いか悪いかは皆さんの主観に任せますが、まだまだ改善の余地があると個人的には感じています（というのも Davis チーム曰く、このコンテストは期間が結構きつく、詰めきれない部分があったようです）。そして本システムの特徴として挙げられるものとして、審査員の平均対話時間が 5分 22秒を達成したことがあります。つまり「Hey, Siri！」と言ってから「Bye, Siri!」 となるまでということです。5分間って短くね？と思う方もいるかもしれませんが、 *言葉だけ* でこの時間喋るのは結構凄いことだと思います。（とはいえ昨年度優勝した Sounding Board はこれよりも長い対話時間を達成していました）    

  Gunrock が特に取り組んだ問題は、以下の3つとなります。    

  1. オープンドメインの音声言語理解を処理するための3層音声言語理解パイプラインの提案
  2. 対話の文脈情報を利用して 一般の事実 と botの意見 をシームレスに切り替えていく柔軟な対話フローを可能にする階層的な対話管理システムの設計
  3. トーン調整や休符挿入を行うことでより自然な応答発話を構築する韻律音声合成機構の作成
  なんのこっちゃと思う方もいると思いますが、私もなんのこっちゃという顔をしています。というのも見ただけでわかるまるで違う研究成果を一つの論文にまとめられている（しかも19ページしかない！）ため、一章読むたびに全く違う分野の参考文献を探す羽目になるという地獄を味わいます。間違っても個人でこの分野は研究したくないなと思いました。


* Amazon Alexa Prize 2018 とは何だったのか
  
* Social bot の関連研究を眺める
  
* Gunrock のアーキテクチャを見てみる

* Gunrock の内部システムを深く見てみる(1)

* Gunrock の内部システムを深く見てみる(2)
  
* Gunrock の内部システムを深く見てみる(3)

* Gunrock が残した課題
